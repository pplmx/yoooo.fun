<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Http on Aurora</title><link>https://notes.yoooo.fun/tags/http/</link><description>Recent content in Http on Aurora</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 16 Sep 2020 11:02:02 +0000</lastBuildDate><atom:link href="https://notes.yoooo.fun/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>Http Version Comparison</title><link>https://notes.yoooo.fun/posts/http-version/</link><pubDate>Wed, 16 Sep 2020 10:53:10 +0000</pubDate><guid>https://notes.yoooo.fun/posts/http-version/</guid><description>&lt;h1 id="http">HTTP
&lt;/h1>&lt;h2 id="preview">Preview
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">Year&lt;/th>
&lt;th style="text-align: center">HTTP Version&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">1996&lt;/td>
&lt;td style="text-align: center">&lt;a class="link" href="https://tools.ietf.org/html/rfc1945" target="_blank" rel="noopener"
>1.0&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">1997&lt;/td>
&lt;td style="text-align: center">&lt;a class="link" href="https://tools.ietf.org/html/rfc2616" target="_blank" rel="noopener"
>1.1&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">2000&lt;/td>
&lt;td style="text-align: center">&lt;a class="link" href="https://tools.ietf.org/html/rfc2818" target="_blank" rel="noopener"
>HTTPS&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">2015&lt;/td>
&lt;td style="text-align: center">&lt;a class="link" href="https://tools.ietf.org/html/rfc7540" target="_blank" rel="noopener"
>2.0&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">???&lt;/td>
&lt;td style="text-align: center">&lt;a class="link" href="https://tools.ietf.org/html/draft-ietf-quic-http" target="_blank" rel="noopener"
>3.0 Draft&lt;/a>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;img src="https://notes.yoooo.fun/assets/HTTP-v1-v2-v3-stacks.png"
loading="lazy"
alt="HTTP_Version"
>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;img src="https://notes.yoooo.fun/assets/http1-265x300.png"
loading="lazy"
alt="HTTP1 Protocol"
>&lt;/td>
&lt;td>&lt;img src="https://notes.yoooo.fun/assets/http1.1-265x300.png"
loading="lazy"
alt="HTTP1.1 Protocol"
>&lt;/td>
&lt;td>&lt;img src="https://notes.yoooo.fun/assets/http2-283x300.png"
loading="lazy"
alt="HTTP2 Protocol"
>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>
&lt;p>HTTP/1.0&lt;/p>
&lt;blockquote>
&lt;p>For every TCP connection there is only one request and one response.&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>HTTP/1.1&lt;/p>
&lt;blockquote>
&lt;p>It supports connection reuse i.e. for every TCP connection there could be multiple requests and responses, and pipelining where the client can
request several resources from the server at once.&lt;/p>
&lt;p>However, pipelining was hard to implement due to issues such as head-of-line blocking and was not a feasible solution.&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>HTTP/2&lt;/p>
&lt;blockquote>
&lt;p>Uses multiplexing, where over a single TCP connection resources to be delivered are interleaved and arrive at the client almost at the same time.&lt;/p>
&lt;p>It is done using streams which can be prioritized, can have dependencies and individual flow control.&lt;/p>
&lt;p>It also provides a feature called server push that allows the server to send data that the client will need but has not yet requested.&lt;/p>&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://notes.yoooo.fun/assets/Comparison-of-HTTP-versions.jpg"
loading="lazy"
alt="Comparison of HTTP versions"
>&lt;/p>
&lt;h2 id="http-10">http 1.0
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>No Connection&lt;/p>
&lt;p>Each request from the browser need build a connection with the server, once the server has handled the request and it will stop the tcp connection
immediately.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>No State&lt;/p>
&lt;p>The server do not trace every client, and record the past requests too.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="http-11">http 1.1
&lt;/h2>&lt;ul>
&lt;li>persistent connection&lt;/li>
&lt;li>Host header is required&lt;/li>
&lt;li>pipelining&lt;/li>
&lt;li>cache-control&lt;/li>
&lt;li>content negotiation&lt;/li>
&lt;/ul>
&lt;h2 id="https">https
&lt;/h2>&lt;p>https ==&amp;gt; HTTP + SSL&lt;/p>
&lt;h2 id="http-20">http 2.0
&lt;/h2>&lt;ul>
&lt;li>Binary Protocol
&lt;ul>
&lt;li>Low overhead in parsing data — &lt;strong>a critical value proposition in HTTP/2 vs HTTP1&lt;/strong>.&lt;/li>
&lt;li>Less prone to errors.&lt;/li>
&lt;li>Lighter network footprint.&lt;/li>
&lt;li>Effective network resource utilization.&lt;/li>
&lt;li>Reduced network latency and improved throughput.&lt;/li>
&lt;li>Eliminating security concerns associated with the textual nature of HTTP1.x such as response splitting attacks.&lt;/li>
&lt;li>Efficient and robust in terms of processing of data between client and server.&lt;/li>
&lt;li>Compact representation of commands for easier processing and implementation.&lt;/li>
&lt;li>Enables other capabilities of the HTTP/2 including compression, multiplexing, prioritization, flow control and effective handling of TLS.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Request Multiplexing
&lt;ul>
&lt;li>Allows you to download web files asynchronously from one server.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Header Compression&lt;/li>
&lt;li>Server Push
&lt;ul>
&lt;li>The client saves pushed resources in the cache.&lt;/li>
&lt;li>The client can reuse these cached resources across different pages.&lt;/li>
&lt;li>The server can multiplex pushed resources along with originally requested information within the same TCP connection.&lt;/li>
&lt;li>The server can prioritize pushed resources — &lt;strong>a key performance differentiator in HTTP/2 vs HTTP1&lt;/strong>.&lt;/li>
&lt;li>The client can decline pushed resources to maintain an effective repository of cached resources or disable Server Push entirely.&lt;/li>
&lt;li>The client can also limit the number of pushed streams multiplexed concurrently.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="http-30">http 3.0
&lt;/h2></description></item></channel></rss>